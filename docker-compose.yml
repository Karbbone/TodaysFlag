version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.app
      args:
        NEXT_PUBLIC_API_HOST: ${NEXT_PUBLIC_API_HOST}
    ports:
      - "3001:3001"
    depends_on:
      - db
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CRON_API_SECRET=${CRON_API_SECRET}
      - NEXT_PUBLIC_API_HOST=${NEXT_PUBLIC_API_HOST}
      - PORT=3001
    networks:
      - traefik
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todays-flag.rule=Host(`todays-flag.maillet.bzh`)"
      - "traefik.http.routers.todays-flag.tls=true"
      - "traefik.http.routers.todays-flag.tls.certresolver=letsencrypt"
      - "traefik.http.services.todays-flag.loadbalancer.server.port=3001"
      - "traefik.docker.network=traefik"

  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DB}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - traefik
      - app-network

  cron:
    build:
      context: .
      dockerfile: Dockerfile.cron
    environment:
      - CRON_API_SECRET=${CRON_API_SECRET}
      - APP_URL=${NEXT_PUBLIC_API_HOST}
    depends_on:
      - app
    restart: always

volumes:
  mysql_data:

networks:
  traefik:
    external: true
  app-network:
    driver: bridge
